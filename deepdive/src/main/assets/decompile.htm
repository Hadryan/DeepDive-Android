<!DOCTYPE html>
<html ng-app="myApp" ng-controller="myController">
<head>
    <title>Decompile: {{ appName }}</title>

    <script src="/js/angular.min.js"></script>
    <link href="/css/bootstrap.css" rel="stylesheet">
    <link href="/css/app.css" rel="stylesheet">
    <link href="/css/probe.css" rel="stylesheet">

</head>

<body>
<!-- Bootstrap core JavaScript -->
<script src="/js/jquery-3.1.1.min.js"></script>
<script src="/js/bootstrap.min.js"></script>
<div ng-include="'./navbar.htm'"></div>

<div class="container">

    <div align="center">
        <h2>Decompile: {{ appName }}</h2>
    </div>
    <br>

    <div align="center">

        <table class="card">
            <tr>
                <td title="Run steps in order 1, 2, 3"><strong>Step (?)</strong></td>
                <td><strong>Action</strong></td>
                <td><strong>Status</strong></td>
                <td><strong>Finder</strong></td>
                <td><strong>Search</strong></td>
            </tr>
            <tr>
                <td>1</td>
                <td>
                    <button ng-click="copyApk()">Extract APK</button>
                </td>
                <td align="center">
                    {{ extract_apk_status | checkmark }}
                </td>
                <td align="center">
                    <a href={{app_folder_url}} target="_blank">
                        <span class="glyphicon glyphicon-folder-open" style="font-size:1.5em"></span>
                    </a>
                </td>
                <td align="center">
                    <a href="/search.htm?search_path={{app_folder_path}}">
                        <span class="glyphicon glyphicon-search" style="font-size:1.5em"></span>
                    </a>
                </td>
            </tr>
            <tr>
                <td>2</td>
                <td>
                    <button ng-click="unpackApk()">Unpack APK</button>
                </td>
                <td align="center">
                    {{ unpack_apk_thread }}
                    <button ng-show="unpack_apk_show_button" ng-click="stopThread('unpack_apk')">Stop</button>
                </td>
            </tr>
            <tr ng-show="unpack_apk_show_time">
                <td></td>
                <td></td>
                <td>
                    {{ unpack_apk_time }}
                </td>
            </tr>
            <tr>
                <td>3.1 CFR</td>
                <td>
                    <button ng-click="optimizeDex()">Optimize DEX (optional)</button>
                </td>
                <td align="center">
                    {{ optimize_dex_thread }}
                    <button ng-show="optimize_dex_show_button" ng-click="stopThread('optimize_dex')">Stop</button>
                </td>
            </tr>
            <tr ng-show="optimize_dex_show_time">
                <td></td>
                <td></td>
                <td>
                    {{ optimize_dex_time }}
                </td>
            </tr>
            <tr>
                <td>3.2 CFR</td>
                <td>
                    <button ng-click="dex2jar()">DEX to JAR</button>
                </td>
                <td align="center">
                    {{ dex2jar_thread }}
                    <button ng-show="dex2jar_show_button" ng-click="stopThread('dex2jar')">Stop</button>
                </td>
            </tr>
            <tr ng-show="dex2jar_show_time">
                <td></td>
                <td></td>
                <td>
                    {{ dex2jar_time }}
                </td>
            </tr>
            <tr>
                <td>3.3 CFR</td>
                <td>
                    <button ng-click="startCfr()">Decompile with CFR 0.119</button>
                </td>
                <td align="center">
                    {{ cfr_thread }}
                    <button ng-show="cfr_show_button" ng-click="stopThread('cfr')">Stop</button>
                </td>
                <td align="center">
                    <a href={{cfr_url}} target="_blank">
                        <span class="glyphicon glyphicon-folder-open" style="font-size:1.5em"></span>
                    </a>
                </td>
                <td align="center">
                    <a href="/search.htm?search_path={{app_folder_path}}/srcCfr">
                        <span class="glyphicon glyphicon-search" style="font-size:1.5em"></span>
                    </a>
                </td>
            </tr>
            <tr ng-show="cfr_show_time">
                <td></td>
                <td></td>
                <td>
                    {{ cfr_time }}
                </td>
            </tr>
            <tr>
                <td>3 Jadx</td>
                <td>
                    <button ng-click="startJadx()">Decompile with Jadx 0.6.1</button>
                </td>
                <td align="center">
                    {{ jadx_thread }}
                    <button ng-show="jadx_show_button" ng-click="stopThread('jadx')">Stop</button>
                </td>
                <td align="center">
                    <a href={{jadx_url}} target="_blank">
                        <span class="glyphicon glyphicon-folder-open" style="font-size:1.5em"></span>
                    </a>
                </td>
                <td align="center">
                    <a href="/search.htm?search_path={{app_folder_path}}/srcJadx">
                        <span class="glyphicon glyphicon-search" style="font-size:1.5em"></span>
                    </a>
                </td>
            </tr>
            <tr ng-show="jadx_show_time">
                <td></td>
                <td></td>
                <td>
                    {{ jadx_time }}
                </td>
            </tr>
            <tr>
                <td>3 FernFlower</td>
                <td>
                    <button ng-click="startFernFlower()">Decompile with FernFlower</button>
                </td>
                <td align="center">
                    {{ fern_thread }}
                    <button ng-show="fern_show_button" ng-click="stopThread('fern')">Stop</button>
                </td>
                <td align="center">
                    <a href={{fern_url}} target="_blank">
                        <span class="glyphicon glyphicon-folder-open" style="font-size:1.5em"></span>
                    </a>
                </td>
                <td align="center">
                    <a href="/search.htm?search_path={{app_folder_path}}/srcFern">
                        <span class="glyphicon glyphicon-search" style="font-size:1.5em"></span>
                    </a>
                </td>
            </tr>
            <tr ng-show="fern_show_time">
                <td></td>
                <td></td>
                <td>
                    {{ fern_time }}
                </td>
            </tr>
        </table>
        <br>

        <table class="card">
            <tr>
                <td>
                    <input placeholder="Search" size="45" type="text" ng-model="search"> # {{
                    (log_array|filter:search).length }}
                    <button ng-click="getLog()">
                        <span class="glyphicon glyphicon-refresh" style="font-size:1.5em"></span></button>
                    <button ng-click="clearLog()"><span class="glyphicon glyphicon-remove"
                                                        style="font-size:1.5em"></span></button>
                    <br>
                </td>
            </tr>

            <tr ng-repeat="line in log_array | filter : search track by $index">
                <td style="padding: 2px 0;"> {{ line }}</td>
            </tr>
        </table>
    </div>


</div><!-- /card-container -->

<br>
<br>

<div ng-include="'footer.htm'"></div>

<script>

    var app = angular.module('myApp', []);
    app.controller('myController', function ($scope, $http, $parse, $interval, $timeout, $sce) {

    $scope.year = new Date().getFullYear(); // footer copyright year

        function getURLParameter(name) {
            return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search) || [null, ''])[1].replace(/\+/g, '%20')) || null;
        }

        $scope.packageName = getURLParameter('packageName');
        $scope.appName = getURLParameter('appName');
        $scope.log_array = [];// array of log items

        // Add an array or simple variable entry to the top of the log
        function putLogTop(logEntry) {

            if( logEntry ){ // inspect for "truthy" value

                var arrayEntries = logEntry;

                if (!Array.isArray(logEntry))
                    arrayEntries = [logEntry];

                if( arrayEntries)
                    $scope.log_array = arrayEntries.concat($scope.log_array);
            }
        }

        function getProcessState(state) {

            if (state == "empty")
                return '-';
            if (state == "stopped")
                return '\u2713';

            return state;
        }

        function updateStatus(status) {

            $scope.app_folder_path = status.app_folder_path;
            $scope.app_folder_url = status.app_folder_url;

            $scope.cfr_url = status.cfr_url;
            $scope.jadx_url = status.jadx_url;
            $scope.fern_url = status.fern_url;

            $scope.extract_apk_status = status.extract_apk_status;
            $scope.optimize_dex_status = status.optimize_dex_status;

            $scope.unpack_apk_thread   = getProcessState( status.unpack_apk_thread);
            $scope.optimize_dex_thread = getProcessState( status.optimize_dex_thread);
            $scope.dex2jar_thread      = getProcessState( status.dex2jar_thread);
            $scope.cfr_thread          = getProcessState( status.cfr_thread);
            $scope.jadx_thread         = getProcessState( status.jadx_thread);
            $scope.fern_thread         = getProcessState( status.fern_thread);;

            $scope.unpack_apk_time     = status.unpack_apk_time;
            $scope.optimize_dex_time   = status.optimize_dex_time;
            $scope.dex2jar_time        = status.dex2jar_time;
            $scope.cfr_time            = status.cfr_time;
            $scope.jadx_time           = status.jadx_time;
            $scope.fern_time           = status.fern_time;

            $scope.unpack_apk_show_time   = ( status.unpack_apk_time.length > 0 );
            $scope.optimize_dex_show_time = ( status.optimize_dex_time.length > 0 );
            $scope.dex2jar_show_time      = ( status.dex2jar_time.length > 0 );
            $scope.cfr_show_time          = ( status.cfr_time.length > 0 );
            $scope.jadx_show_time         = ( status.jadx_time.length > 0 );
            $scope.fern_show_time         = ( status.fern_time.length > 0 );

            $scope.unpack_apk_show_button   = ( status.unpack_apk_thread == "running");
            $scope.dex2jar_show_button      = ( status.dex2jar_thread == "running");
            $scope.optimize_dex_show_button = ( status.optimize_dex_thread == "running");
            $scope.cfr_show_button          = ( status.cfr_thread == "running");
            $scope.jadx_show_button         = ( status.jadx_thread == "running");
            $scope.fern_show_button         = ( status.fern_thread == "running");
            $scope.uploadUrl = status.upload_url;

            putLogTop( status.log);
        }

        $scope.stopThread = function (myMethod) {

            $http.get("/probe/stop_thread/?method=" + myMethod + "&package_name=" + $scope.packageName)
                .then(function (response) {
                });
        };
        // Get status and if threads are still running, schedule future status event
        // Define the function here, kick if off below
        $scope.iterateGetStatus = function () {

            $http.get("/probe/get_status/?package_name=" + $scope.packageName)
                .then(function (response) {

                    var data = $.parseJSON( response.data.status );
                    updateStatus(data);

                    // Schedule a future status update if there are active threads
                    if (data.active_threads > 0) {

                        $timeout(function () {

                            $scope.iterateGetStatus();

                        }, 1000);// start 1 second in the future
                    }
                });
        };

     $scope.copyApk = function(){

         $http.get("/probe/extract_apk/?package_name="+$scope.packageName)
           .then(function (response) {

            $scope.getLog();
            $scope.iterateGetStatus();//FIXME limit to a single instance in case user is performing more than one task
         });
     };
     $scope.unpackApk = function(){

            $http.get("/probe/decompile_action/?action=unpack_apk&package_name=" + $scope.packageName)
                .then(function (response) {

                    // Set iterative updates in motion. Stop when when all threads have completed
                    $scope.iterateGetStatus();//FIXME limit to a single instance in case user is performing more than one task
                });
        };
        $scope.optimizeDex = function () {

            $http.get("/probe/decompile_action/?action=optimize_dex&package_name=" + $scope.packageName)
                .then(function (response) {

                    // Set iterative updates in motion. Stop when when all threads have completed
                    $scope.iterateGetStatus();//FIXME limit to a single instance in case user is performing more than one task
                });
        };
        $scope.dex2jar = function () {

            $http.get("/probe/decompile_action/?action=dex2jar&package_name=" + $scope.packageName)
                .then(function (response) {

                    // Set iterative updates in motion. Stop when when all threads have completed
                    $scope.iterateGetStatus();//FIXME limit to a single instance in case user is performing more than one task
                });
        };
        $scope.startCfr = function () {

            $http.get("/probe/decompile_action/?action=cfr&package_name=" + $scope.packageName)
                .then(function (response) {

                    // Set iterative updates in motion. Stop when when all threads have completed
                    $scope.iterateGetStatus();//FIXME limit to a single instance in case user is performing more than one task
                });
        };
        $scope.startJadx = function () {

            $http.get("/probe/decompile_action/?action=jadx&package_name=" + $scope.packageName)
                .then(function (response) {

                    // Set iterative updates in motion. Stop when when all threads have completed
                    $scope.iterateGetStatus();//FIXME limit to a single instance in case user is performing more than one task
                });
        };
        $scope.startFernFlower = function () {

            $http.get("/probe/decompile_action/?action=fern_flower&package_name=" + $scope.packageName)
                .then(function (response) {

                    // Set iterative updates in motion. Stop when when all threads have completed
                    $scope.iterateGetStatus();//FIXME limit to a single instance in case user is performing more than one task
                });
        };
        $scope.getLog = function () {

            $http.get("/probe/get_log/?package_name=" + $scope.packageName)
                .then(function (response) {

                    var stream = $.parseJSON( response.data.stream );
                    putLogTop( stream);
                });
        };
        $scope.clearLog = function () {

            $http.get("/probe/clear_log/?package_name=" + $scope.packageName)
                .then(function (response) {

                    $scope.log_array = [];
                });
        };

        // Set iterative updates in motion
        // Polling stops when all threads on the server have completed
        $scope.iterateGetStatus();
    });

    app.filter('checkmark', function () {
        return function (input) {
            return input ? '\u2713' : '-'; //'\u2718';
        };
    });

    app.filter('showFlag', function () {
        return function (x) {

            if (x == 1)
                return "Set";
            if (x == 0)
                return "-";

            return "";
        };
    });

</script>
</body>
</html>
